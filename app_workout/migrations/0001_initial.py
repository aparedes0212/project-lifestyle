# Generated by Django 5.2.3 on 2025-08-10 14:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VwStrengthProgression',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('progression_order', models.PositiveIntegerField()),
                ('routine_name', models.CharField(max_length=50)),
                ('current_max', models.DecimalField(decimal_places=8, max_digits=12)),
                ('training_set', models.DecimalField(decimal_places=8, max_digits=12)),
                ('daily_volume', models.DecimalField(decimal_places=8, max_digits=12)),
                ('weekly_volume', models.DecimalField(decimal_places=8, max_digits=12)),
            ],
            options={
                'db_table': 'Vw_Strength_Progression',
                'ordering': ['routine_name', 'progression_order'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CardioDailyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_started', models.DateTimeField()),
                ('goal', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('total_completed', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('max_mph', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('avg_mph', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('minutes_elapsed', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
            ],
            options={
                'verbose_name': 'Cardio Daily Log',
                'verbose_name_plural': 'Cardio Daily Logs',
                'ordering': ['-datetime_started'],
            },
        ),
        migrations.CreateModel(
            name='CardioExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('three_mile_equivalent', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'verbose_name': 'Cardio Exercise',
                'verbose_name_plural': 'Cardio Exercises',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CardioRoutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Cardio Routine',
                'verbose_name_plural': 'Cardio Routines',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CardioUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('mround_numerator', models.PositiveIntegerField(default=1)),
                ('mround_denominator', models.PositiveIntegerField(default=1)),
                ('mile_equiv_numerator', models.DecimalField(decimal_places=3, default=1, max_digits=10)),
                ('mile_equiv_denominator', models.DecimalField(decimal_places=3, default=1, max_digits=10)),
            ],
            options={
                'verbose_name': 'Cardio Unit',
                'verbose_name_plural': 'Cardio Units',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('selected', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Program',
                'verbose_name_plural': 'Programs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PullProgression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_max', models.PositiveIntegerField()),
                ('training_set', models.PositiveIntegerField()),
                ('daily_volume', models.PositiveIntegerField()),
                ('weekly_volume', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Pull Progression',
                'verbose_name_plural': 'Pull Progressions',
                'ordering': ['current_max'],
            },
        ),
        migrations.CreateModel(
            name='SpeedName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('speed_type', models.CharField(choices=[('distance/time', 'Distance/Time'), ('time/distance', 'Time/Distance')], max_length=20)),
            ],
            options={
                'verbose_name': 'Speed Name',
                'verbose_name_plural': 'Speed Names',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StrengthDailyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_started', models.DateTimeField()),
                ('rep_goal', models.PositiveIntegerField(blank=True, null=True)),
                ('total_reps_completed', models.PositiveIntegerField(blank=True, null=True)),
                ('max_reps', models.PositiveIntegerField(blank=True, null=True)),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('minutes_elapsed', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
            ],
            options={
                'verbose_name': 'Strength Daily Log',
                'verbose_name_plural': 'Strength Daily Logs',
                'ordering': ['-datetime_started'],
            },
        ),
        migrations.CreateModel(
            name='StrengthExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'verbose_name': 'Strength Exercise',
                'verbose_name_plural': 'Strength Exercises',
                'ordering': ['routine__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StrengthRoutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('hundred_points_reps', models.PositiveIntegerField()),
                ('hundred_points_weight', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Strength Routine',
                'verbose_name_plural': 'Strength Routines',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplementalDailyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_started', models.DateTimeField()),
                ('goal', models.CharField(blank=True, max_length=80, null=True)),
                ('total_completed', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
            ],
            options={
                'verbose_name': 'Supplemental Daily Log',
                'verbose_name_plural': 'Supplemental Daily Logs',
                'ordering': ['-datetime_started'],
            },
        ),
        migrations.CreateModel(
            name='SupplementalRoutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('unit', models.CharField(choices=[('Time', 'Time'), ('Reps', 'Reps')], max_length=10)),
            ],
            options={
                'verbose_name': 'Supplemental Routine',
                'verbose_name_plural': 'Supplemental Routines',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplementalWorkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'verbose_name': 'Supplemental Workout',
                'verbose_name_plural': 'Supplemental Workouts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UnitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name': 'Unit Type',
                'verbose_name_plural': 'Unit Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CardioDailyLogDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('running_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('running_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('running_miles', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('running_mph', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('treadmill_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('treadmill_time_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='app_workout.cardiodailylog')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='log_details', to='app_workout.cardioexercise')),
            ],
            options={
                'verbose_name': 'Cardio Daily Log Detail',
                'verbose_name_plural': 'Cardio Daily Log Details',
                'ordering': ['datetime'],
            },
        ),
        migrations.AddField(
            model_name='cardiodailylog',
            name='routine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='daily_logs', to='app_workout.cardioroutine'),
        ),
        migrations.AddField(
            model_name='cardioexercise',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exercises', to='app_workout.cardiounit'),
        ),
        migrations.CreateModel(
            name='CardioWorkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('priority_order', models.PositiveIntegerField(default=1)),
                ('skip', models.BooleanField(default=False)),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workouts', to='app_workout.cardioroutine')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workouts', to='app_workout.cardiounit')),
            ],
            options={
                'verbose_name': 'Cardio Workout',
                'verbose_name_plural': 'Cardio Workouts',
                'ordering': ['routine__name', 'priority_order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='cardiounit',
            name='speed_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='units', to='app_workout.speedname'),
        ),
        migrations.CreateModel(
            name='StrengthDailyLogDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('reps', models.PositiveIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='app_workout.strengthdailylog')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='log_details', to='app_workout.strengthexercise')),
            ],
            options={
                'verbose_name': 'Strength Daily Log Detail',
                'verbose_name_plural': 'Strength Daily Log Details',
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='StrengthPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strength_plans', to='app_workout.program')),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plans', to='app_workout.strengthroutine')),
            ],
            options={
                'verbose_name': 'Strength Plan',
                'verbose_name_plural': 'Strength Plans',
                'ordering': ['program__name', 'routine__name'],
            },
        ),
        migrations.AddField(
            model_name='strengthexercise',
            name='routine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exercises', to='app_workout.strengthroutine'),
        ),
        migrations.AddField(
            model_name='strengthdailylog',
            name='routine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='daily_logs', to='app_workout.strengthroutine'),
        ),
        migrations.CreateModel(
            name='StrengthCurrentMaxWeeklyVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekly_volume', models.DecimalField(decimal_places=6, max_digits=10)),
                ('datetime_accomplished', models.DateTimeField()),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='weekly_volume_marks', to='app_workout.strengthroutine')),
            ],
            options={
                'verbose_name': 'Strength Current Max Weekly Volume',
                'verbose_name_plural': 'Strength Current Max Weekly Volumes',
                'ordering': ['-datetime_accomplished'],
            },
        ),
        migrations.CreateModel(
            name='StrengthCurrentMaxDailyVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_volume', models.DecimalField(decimal_places=6, max_digits=10)),
                ('datetime_accomplished', models.DateTimeField()),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='daily_volume_marks', to='app_workout.strengthroutine')),
            ],
            options={
                'verbose_name': 'Strength Current Max Daily Volume',
                'verbose_name_plural': 'Strength Current Max Daily Volumes',
                'ordering': ['-datetime_accomplished'],
            },
        ),
        migrations.CreateModel(
            name='StrengthCurrentMax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_max', models.DecimalField(decimal_places=4, max_digits=8)),
                ('datetime_accomplished', models.DateTimeField()),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='current_maxes', to='app_workout.strengthroutine')),
            ],
            options={
                'verbose_name': 'Strength Current Max',
                'verbose_name_plural': 'Strength Current Max',
                'ordering': ['-datetime_accomplished'],
            },
        ),
        migrations.CreateModel(
            name='SupplementalDailyLogDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('unit_count', models.DecimalField(decimal_places=2, max_digits=9)),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='app_workout.supplementaldailylog')),
            ],
            options={
                'verbose_name': 'Supplemental Daily Log Detail',
                'verbose_name_plural': 'Supplemental Daily Log Details',
                'ordering': ['datetime'],
            },
        ),
        migrations.AddField(
            model_name='supplementaldailylog',
            name='routine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='daily_logs', to='app_workout.supplementalroutine'),
        ),
        migrations.AddField(
            model_name='cardiounit',
            name='unit_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='units', to='app_workout.unittype'),
        ),
        migrations.CreateModel(
            name='CardioProgression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progression_order', models.PositiveIntegerField()),
                ('progression', models.DecimalField(decimal_places=2, max_digits=6)),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progressions', to='app_workout.cardioworkout')),
            ],
            options={
                'verbose_name': 'Cardio Progression',
                'verbose_name_plural': 'Cardio Progressions',
                'ordering': ['workout__name', 'progression_order'],
                'unique_together': {('workout', 'progression_order')},
            },
        ),
        migrations.CreateModel(
            name='CardioPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('routine_order', models.PositiveIntegerField()),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plans', to='app_workout.cardioroutine')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='app_workout.program')),
            ],
            options={
                'verbose_name': 'Cardio Plan',
                'verbose_name_plural': 'Cardio Plans',
                'ordering': ['program__name', 'routine_order'],
                'unique_together': {('program', 'routine_order')},
            },
        ),
        migrations.CreateModel(
            name='SupplementalPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplemental_plans', to='app_workout.program')),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plans', to='app_workout.supplementalroutine')),
            ],
            options={
                'verbose_name': 'Supplemental Plan',
                'verbose_name_plural': 'Supplemental Plans',
                'ordering': ['program__name', 'routine__name'],
                'unique_together': {('routine', 'program')},
            },
        ),
        migrations.CreateModel(
            name='SupplementalWorkoutDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('goal_metric', models.CharField(choices=[('Max Unit', 'Max Unit'), ('Max Sets', 'Max Sets')], max_length=20)),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workout_descriptions', to='app_workout.supplementalroutine')),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='routine_descriptions', to='app_workout.supplementalworkout')),
            ],
            options={
                'verbose_name': 'Supplemental Workout Description',
                'verbose_name_plural': 'Supplemental Workout Descriptions',
                'ordering': ['routine__name', 'workout__name'],
                'unique_together': {('routine', 'workout')},
            },
        ),
    ]
